class AgentPool{#e;#t;#o;#n;constructor(e){this.world=e,this.#e={},this.#t={},this.toBeRemoved=[],this.#n=0,this.#o=class{#r;#s;#i;constructor(e,t,o){this._children={},this.#s={},this.#r=e,this.#i=o,t.info&&Object.keys(t.info).forEach((e=>{let o=t.info[e];this[e]="object"==typeof o?Object.assign({},o):o}))}getID(){return this.#i}getType(){return this.#r}isInCollection(e){return this.#s[e]}getCollections(){return Object.keys(this.#s)}addCollection(e){this.#s[e]=1}removeCollection(e){delete this.#s[e]}reset(e,t){this.#i=t,Object.keys(e.info).forEach((t=>{let o=e.info[t];this[t]="object"==typeof o?Object.assign({},o):o}))}}}registerType(e,t){return"string"!=typeof e||""==e?(console.error(`Cannot create agentType with a type name defined as: ${e}; the type must be a non-empty string`),!1):null!=this.#e[e]?(console.error(`The type named '${e}' has already been registered`),!1):null==t?(console.error("Prototype cannot be undefined, it must be a JSON with the attributes of the agent"),!1):(this.#e[e]=t,this.#t[e]=[],!0)}createAgent(e,t=void 0){if("string"!=typeof e||""==e)return console.error(`Cannot create agent with a type defined as: ${e}; the type must be a non-empty string`),!1;if(!this.#e[e])return console.error(`Cannot create agent with a type defined as: ${e}; the type doesn't exist at AgentPool`),!1;if(null!=t&&"object"!=typeof t)return console.error("'details' must be an object"),!1;var o;this.world;return this.#t[e].length>0?(o=this.#t[e].pop(),this.resetAgent(o)):o=new this.#o(e,this.#e[e],this.#n++),t&&t.info?(Object.keys(t.info).forEach((e=>{null!=t.info[e]&&(o[e]=t.info[e])})),o instanceof this.#o?o:(console.error(`Something went wrong when creating a new Agent of type ${e}`),!1)):o}getCollectionsOfType(e){if(!this.#e[e])return console.warn(`Cannot get collections from unexisting type '${typename}'`),!1;return this.#e[e].collections||[]}storeToBeRemoved(e){this.toBeRemoved.push(e)}removeAgent(e){try{let t=e.getType();e.getCollections().forEach((t=>{this.world.removeFromCollection(t,e)}));let o=Object.keys(e._children);for(;o.length;)this.removeAgent(e._children[o[0]]),delete e._children[o[0]],o.shift();this.#t[t].push(e)}catch(t){return console.error(`Error removing agent ${e}`),!1}}removeAgents(){for(;this.toBeRemoved.length;){let e=this.toBeRemoved.pop();this.removeAgent(e)}}resetAgent(e){let t=this.#e[e.getType()];e.reset(t,this.#n++)}}class CollectionManager{#s;constructor(e){this.world=e,this.#s={},this.toBeRemoved=[],this._objectPool=[]}registerCollection(e){return"string"!=typeof e||""==e?(console.error(`Cannot register collection with a name defined as: ${typeName}; the name must be a non-empty string`),!1):this.#s[e]?(console.error(`Collection named '${e}' already registered`),!1):(this.#s[e]=[],this)}getCollection(e){return this.#s[e]?this.#s[e]:(console.error(`Cannot get unregistered collection '${e}'`),!1)}addToCollection(e,t=void 0){return this.#s[e]?"object"==typeof t&&t.isInCollection&&t.addCollection?t.isInCollection||t.isInCollection(e)?(console.error(`The agent is already registered to collection ${e}`),!1):(this.#s[e].push(t),t.addCollection(e),!0):(console.error(`The value passed as 'agent' is not a valid Agent object ${e}`),!1):(console.error(`collection named '${e} is not registered'`),!1)}cacheToBeRemoved(e,t){var o;this._objectPool.length>0?((o=this._objectPool.pop()).collectionName=e,o.agent=t,this.toBeRemoved.push(o)):this.toBeRemoved.push({collectionName:e,agent:t})}removeFromCollection(e,t){let o=this.#s[e].indexOf(t);this.#s[e].splice(o,1),t.removeCollection(e)}removeAgentsFromCollections(){for(;this.toBeRemoved.length>0;){let e=this.toBeRemoved.pop();this.removeFromCollection(e.collectionName,e.agent),e.collectionName=void 0,e.agent=void 0,this._objectPool.push(e)}}}class EventManager{constructor(e){this.world=e,this.events={}}registerEvent(e){if(this.events[e])return console.warn(`Event named '${e} has already been registered'`),!1;this.events[e]={}}registerServiceToEvent(e,t){if(!this.events[t])return console.warn(`Cannot register service '${e}' to unregistered event '${t}'`),!1;var o=this.world.getService(e);return o?"function"!=typeof o[`on${t}`]?(console.warn(`Cannot register service '${e}' to event, because the service does not have a method 'on${t}'`),!1):void(this.events[t][e]=o):(console.warn(`Cannot register service '${e}' to event, because the service is not registered to the framework`),!1)}notifyToServices(e,t=void 0){if(!this.events[e])return console.warn(`Cannot notify event '${e}' because it does not exist`),!1;WORLD.getService("AgentBehaviour"),Object.keys(this.events[e]).forEach((o=>{this.world.getService(o)[`on${e}`](t)}))}}class Service{constructor(){this.world=new World}execute(){return!1}init(){return!1}}class ServiceManager{#c;constructor(e){this.world=e,this.#c={}}registerService(e,t){return"string"!=typeof e||""==e?(console.error(`Cannot register service with a name defined as: ${typeName}; the name must be a non-empty string`),!1):this.#c[e]?(console.error(`Service named '${e}' already registered`),!1):t&&null!=t?(t.world=this.world,this.#c[e]=t,this.#c[e].init(),!0):(console.error(`Cannot register invalid or null service '${e}'`),!1)}getServices(){return this.#c}getService(e){return this.#c[e]?this.#c[e]:(console.error(`Cannot get unregistered service '${e}'`),!1)}}class World{#l;#a;#h;#g;constructor(){this.#l=new AgentPool(this),this.#a=new CollectionManager(this),this.#g=new EventManager(this),this.#h=new ServiceManager(this),this.frame=0,this.routine=()=>{},this.pause=!1}registerService(e,t){return this.#h.registerService(e,t)}getServices(){return this.#h.getServices()}getService(e){return this.#h.getService(e)}registerCollection(e){return this.#a.registerCollection(e)}getCollection(e){return this.#a.getCollection(e)}addToCollection(e,t){return this.#a.addToCollection(e,t)}removeFromCollection(e,t){return this.#a.cacheToBeRemoved(e,t)}registerAgentType(e,t){return this.#l.registerType(e,t)}createAgent(e,t=void 0){let o=this.#l.createAgent(e,t);return this.#l.getCollectionsOfType(e).forEach((e=>{this.addToCollection(e,o)})),o}removeAgent(e){this.#l.storeToBeRemoved(e)}registerEvent(e){this.#g.registerEvent(e)}registerServiceToEvent(e,t){this.#g.registerServiceToEvent(e,t)}notifyEvent(e,t){this.#g.notifyToServices(e,t)}execute(){if(!this.pause){requestAnimationFrame((()=>{this.execute()})),this.#l.removeAgents(),this.#a.removeAgentsFromCollections();var e=this.getServices();Object.keys(e).forEach((t=>{e[t].execute()})),this.pause||(this.frame++,this.routine(this))}}pauseExecution(){this.pause=!0}}